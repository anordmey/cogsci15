plot.style
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp2.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.high)$rating
qplot(data=mss, x=condition, y=rating, fill=sentence.type,
geom="bar", stat="identity", position=position_dodge(width=.95),
facets=~truth.value) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.95)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="True" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition, d.trueneg, mean)
mss <- aggregate(rating ~ condition, ms, mean)
mss$low <- aggregate(rating ~ condition, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("none","foil", "target"), labels=c("None", "Foil", "Target"))
qplot(data=mss, x=condition, y=rating,
geom="bar", stat="identity", position="dodge") +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
coord_equal(1/1.5) +
plot.style
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp2.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.high)$rating
qplot(data=mss, x=condition, y=rating, fill=sentence.type,
geom="bar", stat="identity", position=position_dodge(width=.95),
facets=~truth.value) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.95)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="True" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition, d.trueneg, mean)
mss <- aggregate(rating ~ condition, ms, mean)
mss$low <- aggregate(rating ~ condition, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("none","foil", "target"), labels=c("None", "Foil", "Target"))
qplot(data=mss, x=condition, y=rating,
geom="bar", stat="identity", position="dodge") +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey() +
xlab("Context") + ylab("Rating") +
coord_equal(1/1.5) +
plot.style
###### -----Statistical Models-------- #######
d$sentence.type <- factor(d$sentence.type, levels=c("positive","negative"))
d$condition <- factor(d$condition, levels=c("none","foil","target"))
model.all <- lmer(rating ~ condition*sentence.type*truth.value +
(sentence.type*truth.value | subid) +
(sentence.type*truth.value | item),
data=d)
model.trueneg <- lmer(rating ~ condition +
(1 | subid) +
(1 | item),
data=subset(d, truth.value=="True" & sentence.type=="negative"))
head(d)
str(d)
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
n.unique(d)
n.unique(d$subid)
str(d)
d$subid <- as.numeric(d$subid)
str(d$subid)
n.uniwue(d$subid)
n.unique(d$subid)
d$subid <- as.factor(d$subid)
str(d)
write.csv(d, "./data/cogsci2015_exp1.csv")
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
head(d)
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp2.csv")
n.unique(d)
n.unique(d$subid)
str(d)
d$subid <- as.numeric(d$subid)
str(subid)
str(d)
d$subid <- as.factor(d$subid)
str(d)
write.csv(d, "./data/cogsci2015_exp2.csv")
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
head(d)
###negpad verification###
###Merge data files###
rm(list=ls())
source("~/Documents/R/aen.useful.R")
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Load data
d <- read.csv("./data/cogsci2015_exp2.csv")
head(d)
rm(list=ls())
###negpad verification###
###Merge data files###
rm(list=ls())
#Load libraries
library(ggplot2)
library(bootstrap)
library(lme4)
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Functions
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value + neg.concept + neg.syntax, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.high)$rating
qplot(data=mss, x=sentence.type, y=rating,
color=neg.concept, shape=neg.syntax,
geom="point", stat="identity", position=position_dodge(width=.5),
facets=~truth.value~condition) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.5)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="True" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition + neg.concept + neg.syntax, d.trueneg, mean)
mss <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("noContext","context"), labels=c("None", "Target"))
mss$neg.concept <- factor(mss$neg.concept, levels=c("something","nothing"), labels=c("Alternative", "Nonexistence"))
mss$neg.syntax <- factor(mss$neg.syntax, levels=c("has no","doesn't have"), labels=c("has no X", "doesn't have X"))
qplot(data=mss, x=condition, y=rating, fill=neg.concept,
geom="bar", stat="identity", position="dodge",
facets=~neg.syntax) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
###negpad verification###
###Merge data files###
rm(list=ls())
#Load libraries
library(ggplot2)
library(bootstrap)
library(lme4)
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Functions
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value + neg.concept + neg.syntax, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.high)$rating
qplot(data=mss, x=sentence.type, y=rating,
color=neg.concept, shape=neg.syntax,
geom="point", stat="identity", position=position_dodge(width=.5),
facets=~truth.value~condition) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.5)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="True" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition + neg.concept + neg.syntax, d.trueneg, mean)
mss <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.high)$rating
head(d)
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="TRUE" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition + neg.concept + neg.syntax, d.trueneg, mean)
mss <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("noContext","context"), labels=c("None", "Target"))
mss$neg.concept <- factor(mss$neg.concept, levels=c("something","nothing"), labels=c("Alternative", "Nonexistence"))
mss$neg.syntax <- factor(mss$neg.syntax, levels=c("has no","doesn't have"), labels=c("has no X", "doesn't have X"))
qplot(data=mss, x=condition, y=rating, fill=neg.concept,
geom="bar", stat="identity", position="dodge",
facets=~neg.syntax) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
###negpad verification###
###Merge data files###
rm(list=ls())
#Load libraries
library(ggplot2)
library(bootstrap)
library(lme4)
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Functions
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
#Load data
d <- read.csv("./data/cogsci2015_exp1.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value + neg.concept + neg.syntax, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value + neg.concept + neg.syntax, ms, ci.high)$rating
qplot(data=mss, x=sentence.type, y=rating,
color=neg.concept, shape=neg.syntax,
geom="point", stat="identity", position=position_dodge(width=.5),
facets=~truth.value~condition) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.5)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="TRUE" & d$sentence.type =="negative",]
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition + neg.concept + neg.syntax, d.trueneg, mean)
mss <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, mean)
mss$low <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + neg.concept + neg.syntax, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("noContext","context"), labels=c("None", "Target"))
mss$neg.concept <- factor(mss$neg.concept, levels=c("something","nothing"), labels=c("Alternative", "Nonexistence"))
mss$neg.syntax <- factor(mss$neg.syntax, levels=c("has no","doesn't have"), labels=c("has no X", "doesn't have X"))
qplot(data=mss, x=condition, y=rating, fill=neg.concept,
geom="bar", stat="identity", position="dodge",
facets=~neg.syntax) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Rating") +
plot.style
###### -----Statistical Models-------- #######
d$sentence.type <- factor(d$sentence.type, levels=c("positive","negative"))
d$condition <- factor(d$condition, levels=c("noContext","context"))
model.all <- lmer(rating ~ sentence.type*condition*truth.value +
(sentence.type*truth.value | subid) +
(sentence.type*truth.value | item),
data=d)
model.true.neg <- lmer(rating ~ condition*neg.concept*neg.syntax +
(neg.concept*neg.syntax | subid) +
(neg.concept*neg.syntax | item),
data=subset(d, truth.value=="True" & sentence.type=="negative"))
model.true.neg <- lmer(rating ~ condition*neg.concept*neg.syntax +
(neg.concept*neg.syntax | subid) +
(neg.concept*neg.syntax | item),
data=subset(d, truth.value=="TRUE" & sentence.type=="negative"))
model.true.neg
###negpad verification###
###Merge data files###
rm(list=ls())
#Load libraries
library(ggplot2)
library(bootstrap)
library(lme4)
#set working directory
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials")
#Functions
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
#Load data
d <- read.csv("./data/cogsci2015_exp2.csv")
#Hist of ratings scale
histogram(d$rating)
##Plot data
##Plot everything
ms <- aggregate(rating ~ subid + condition + sentence.type + truth.value, d, mean)
mss <- aggregate(rating ~ condition + sentence.type + truth.value, ms, mean)
mss$low <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition + sentence.type + truth.value, ms, ci.high)$rating
qplot(data=mss, x=condition, y=rating, fill=sentence.type,
geom="bar", stat="identity", position=position_dodge(width=.95),
facets=~truth.value) +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.95)) +
plot.style
#Just look at true negative sentences
d.trueneg <- d[d$truth.value=="True" & d$sentence.type =="negative",]
head(d)
d.trueneg
d.trueneg <- d[d$truth.value=="TRUE" & d$sentence.type =="negative",]
d.trueneg
##Look at negation concept & negation syntax (just true negatives)
ms <- aggregate(rating ~ subid + condition, d.trueneg, mean)
mss <- aggregate(rating ~ condition, ms, mean)
mss$low <- aggregate(rating ~ condition, ms, ci.low)$rating
mss$high <- aggregate(rating ~ condition, ms, ci.high)$rating
mss$condition <- factor(mss$condition, levels=c("none","foil", "target"), labels=c("None", "Foil", "Target"))
qplot(data=mss, x=condition, y=rating,
geom="bar", stat="identity", position="dodge") +
geom_errorbar(aes(ymin=low, ymax=high), width=0,
position=position_dodge(width=.9)) +
scale_fill_grey() +
xlab("Context") + ylab("Rating") +
coord_equal(1/1.5) +
plot.style
###### -----Statistical Models-------- #######
d$sentence.type <- factor(d$sentence.type, levels=c("positive","negative"))
d$condition <- factor(d$condition, levels=c("none","foil","target"))
model.all <- lmer(rating ~ condition*sentence.type*truth.value +
(sentence.type*truth.value | subid) +
(sentence.type*truth.value | item),
data=d)
model.trueneg <- lmer(rating ~ condition +
(1 | subid) +
(1 | item),
data=subset(d, truth.value=="TRUE" & sentence.type=="negative"))
model.trueneg
rm(list=ls())
#Libraries
library(bootstrap)
library(ggplot2)
library(plyr)
library(gridExtra)
#Functions
# for bootstrapping 95% confidence intervals
theta <- function(x,xdata) {mean(xdata[x])}
ci.low <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.025)}
ci.high <- function(x) {
quantile(bootstrap(1:length(x),1000,theta,x)$thetastar,.975)}
plot.style <- theme_bw() + theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(), legend.position="right", axis.line = element_line(colour="black",size=.5), axis.ticks = element_line(size=.5), axis.title.x = element_text(vjust=-.5), axis.title.y = element_text(angle=90,vjust=0.25))
# uses same model as negatron
setwd("~/Documents/Work/Publications/Writing/cogsci_2015/materials/model")
source("model.R")
##################### PARAMETERS ##########################
n.pos <- 1 # number of positive features shared by everyone
n.neg <- 10 # number of negative features shared by everyone
#Creates the vocabulary - all possible words that could describe these characters
#1 is the "target" item (e.g. the thing that is negated)
#2 is the alternative/foil item for relevant trials (where foil items are not relevant, 2 becomes just an additional negative feature shared by all)
#Note that 1 & 2 are mutually exclusive -- you can't have both features.
vocab <- c(1:(2+n.pos+n.neg),-(2+n.pos+n.neg):-1)
# create the full set of experiment 1 conditions
# pos vs. neg is whether the target character has the target items (corresponds to true pos and true neg if we only look at true sentences)
# non vs. alt is nonexistence vs. alternative negation type
# target vs none is context vs no context
exp1.pos.none  <- matrix(c(1, 0, rep(1,n.pos), rep(0,n.neg),
0, 0, rep(1,n.pos), rep(0,n.neg),
0, 0, rep(1,n.pos), rep(0,n.neg),
0, 0, rep(1,n.pos), rep(0,n.neg)),
byrow=TRUE,
nrow=4, ncol=2 + n.pos + n.neg)
exp1.pos.target <- exp1.pos.none
exp1.pos.target[,1] <- c(1,1,1,1)
exp1.neg.non.none  <- exp1.pos.none
exp1.neg.non.none [,1] <- c(0,0,0,0)
exp1.neg.non.target <- exp1.pos.none
exp1.neg.non.target[,1] <- c(0,1,1,1)
exp1.neg.alt.none  <- exp1.neg.non.none
exp1.neg.alt.none[,2] <- c(1,0,0,0)
exp1.neg.alt.target <- exp1.neg.non.target
exp1.neg.alt.target[,2] <- c(1,0,0,0)
# create the full set of experiment 2 conditions
exp2.pos.none <- exp1.pos.none
exp2.pos.foil <- exp1.pos.none
exp2.pos.foil[,2] <- c(0,1,1,1)
exp2.pos.target <- exp1.pos.target
exp2.neg.none <- exp1.neg.alt.none
exp2.neg.foil <- exp1.neg.alt.none
exp2.neg.foil[,2] <- c(1,1,1,1)
exp2.neg.target <- exp1.neg.alt.target
#binds all positive contexts into a single list.
contexts <- list(exp1.pos.none,
exp1.pos.target,
exp1.neg.non.none,
exp1.neg.non.target,
exp1.neg.alt.none,
exp1.neg.alt.target,
exp2.pos.none,
exp2.pos.foil,
exp2.pos.target,
exp2.neg.none,
exp2.neg.foil,
exp2.neg.target)
names(contexts) <- c("exp1.pos.none",
"exp1.pos.target",
"exp1.neg.non.none",
"exp1.neg.non.target",
"exp1.neg.alt.none",
"exp1.neg.alt.target",
"exp2.pos.none",
"exp2.pos.foil",
"exp2.pos.target",
"exp2.neg.none",
"exp2.neg.foil",
"exp2.neg.target")
n <- length(contexts)
####################compare model to data#####################
#############Individual simulation###############
##PARAMETERS:
cost = .8
probs <- data.frame(word=c(rep("positive", n), rep("negative", n)),
truth.value = c("True","True","False","False","False","False","True","True","True","False","False","False","False","False","True","True","True","True","False","False","False","True","True","True"),
experiment=c(rep("exp1", 6), rep("exp2", 6), rep("exp1", 6), rep("exp2", 6)),
context=rep(c("none","target","none","target","none","target","none","foil","target","none","foil","target"), 2),
negation.type = c("NA","NA","non","non","alt","alt","NA","NA","NA","alt","alt","alt","NA","NA","non","non","alt","alt","NA","NA","NA","alt","alt","alt"),
p.word=NA)
#set up variables for loop
words <- c(1,-1) #two possible words: e.g "apples" and "no apples"
count <- 1
for (w in 1:2) {
for (context.num in 1:n) {
probs$p.word[count] <- p.word.given.context(word=words[w],
context=contexts[context.num][[1]],
cost.per.word=cost)
count <- count + 1
}
}
##Plot probs
#Just look at true negative sentences
probs$context <- factor(probs$context, levels=c("none","foil","target"), labels=c("None","Foil","Target"))
probs$negation.type <- factor(probs$negation.type, levels=c("alt","non"), labels=c("Alternative", "Nonexistence"))
probs$experiment <- factor(probs$experiment, labels=c("Experiment 1", "Experiment 2"))
qplot(data=subset(probs, truth.value=="True" & word=="negative"),
x=context, y=p.word, fill=negation.type,
geom="bar", stat="identity", position="dodge") +
facet_grid(.~experiment, scales="free") +
#ggtitle("Model predictions") +
scale_fill_grey("Negation Type") +
xlab("Context") + ylab("Model Probabilities") +
plot.style
